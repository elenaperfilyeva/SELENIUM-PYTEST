{"name": "test_search_positive[Morris]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_REFUSED\n  (Session info: chrome=113.0.5672.126)\nStacktrace:\nBacktrace:\n\tGetHandleVerifier [0x00F88893+48451]\n\t(No symbol) [0x00F1B8A1]\n\t(No symbol) [0x00E25058]\n\t(No symbol) [0x00E21843]\n\t(No symbol) [0x00E18AC5]\n\t(No symbol) [0x00E19B2A]\n\t(No symbol) [0x00E18E23]\n\t(No symbol) [0x00E18175]\n\t(No symbol) [0x00E1810C]\n\t(No symbol) [0x00E16D46]\n\t(No symbol) [0x00E174A8]\n\t(No symbol) [0x00E267F2]\n\t(No symbol) [0x00E7CA61]\n\t(No symbol) [0x00E6A2BC]\n\t(No symbol) [0x00E7C482]\n\t(No symbol) [0x00E6A0B6]\n\t(No symbol) [0x00E47E08]\n\t(No symbol) [0x00E48F2D]\n\tGetHandleVerifier [0x011E8E3A+2540266]\n\tGetHandleVerifier [0x01228959+2801161]\n\tGetHandleVerifier [0x0122295C+2776588]\n\tGetHandleVerifier [0x01012280+612144]\n\t(No symbol) [0x00F24F6C]\n\t(No symbol) [0x00F211D8]\n\t(No symbol) [0x00F212BB]\n\t(No symbol) [0x00F14857]\n\tBaseThreadInitThunk [0x765C00C9+25]\n\tRtlGetAppContainerNamedObjectPath [0x77B77B4E+286]\n\tRtlGetAppContainerNamedObjectPath [0x77B77B1E+238]", "trace": "self = <tests.test_search.TestSearchPoems object at 0x00000218A191B490>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"f1f6e4cdda59c55b622acd4dfb33d122\")>\ntest_data_conn = <sqlite3.Connection object at 0x00000218A1870A40>\nsearch_request = 'Morris'\n\n    @pytest.mark.parametrize(\"search_request\",\n                             [(\"Morris\"),\n                              (\"Comus\"),\n                              (\"John Dryden\"),\n                              (\"Summer Winds\")])\n    def test_search_positive(self, driver, test_data_conn, search_request):\n        home_page = HomePage(driver)\n>       home_page.open()\n\ntests\\test_search.py:16: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\home_page.py:26: in open\n    super()._open(self.__url)\npages\\base_page.py:50: in _open\n    self.driver.get(url)\n..\\..\\python-selenium-venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:449: in get\n    self.execute(Command.GET, {\"url\": url})\n..\\..\\python-selenium-venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:440: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000218A191BE50>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"unknown error: net::ERR_CONNECTION_REFUSED\\\\n  ...\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77B77B4E+286]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77B77B1E+238]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_REFUSED\nE         (Session info: chrome=113.0.5672.126)\nE       Stacktrace:\nE       Backtrace:\nE       \tGetHandleVerifier [0x00F88893+48451]\nE       \t(No symbol) [0x00F1B8A1]\nE       \t(No symbol) [0x00E25058]\nE       \t(No symbol) [0x00E21843]\nE       \t(No symbol) [0x00E18AC5]\nE       \t(No symbol) [0x00E19B2A]\nE       \t(No symbol) [0x00E18E23]\nE       \t(No symbol) [0x00E18175]\nE       \t(No symbol) [0x00E1810C]\nE       \t(No symbol) [0x00E16D46]\nE       \t(No symbol) [0x00E174A8]\nE       \t(No symbol) [0x00E267F2]\nE       \t(No symbol) [0x00E7CA61]\nE       \t(No symbol) [0x00E6A2BC]\nE       \t(No symbol) [0x00E7C482]\nE       \t(No symbol) [0x00E6A0B6]\nE       \t(No symbol) [0x00E47E08]\nE       \t(No symbol) [0x00E48F2D]\nE       \tGetHandleVerifier [0x011E8E3A+2540266]\nE       \tGetHandleVerifier [0x01228959+2801161]\nE       \tGetHandleVerifier [0x0122295C+2776588]\nE       \tGetHandleVerifier [0x01012280+612144]\nE       \t(No symbol) [0x00F24F6C]\nE       \t(No symbol) [0x00F211D8]\nE       \t(No symbol) [0x00F212BB]\nE       \t(No symbol) [0x00F14857]\nE       \tBaseThreadInitThunk [0x765C00C9+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x77B77B4E+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x77B77B1E+238]\n\n..\\..\\python-selenium-venv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:245: WebDriverException"}, "attachments": [{"name": "stderr", "source": "748d169e-ebdd-44c6-bb0c-beff2b99d55f-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "search_request", "value": "'Morris'"}], "start": 1684428263595, "stop": 1684428267828, "uuid": "73629f91-85a3-4ad4-81f1-ed982102b414", "historyId": "fc736fecb3d3a386dd83781eccbcc442", "testCaseId": "249f7e6e4d1734bfcb94cc5d7d921a26", "fullName": "tests.test_search.TestSearchPoems#test_search_positive", "labels": [{"name": "tag", "value": "search"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_search"}, {"name": "subSuite", "value": "TestSearchPoems"}, {"name": "host", "value": "DESKTOP-Q309S43"}, {"name": "thread", "value": "18616-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_search"}]}